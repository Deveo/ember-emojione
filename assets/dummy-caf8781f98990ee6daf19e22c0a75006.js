"use strict";define("dummy/app",["exports","ember","ember-application","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,r,o,i){var l=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,l=n.default.extend({modulePrefix:i.default.modulePrefix,podModulePrefix:i.default.podModulePrefix,Resolver:r.default}),(0,o.default)(l,i.default.modulePrefix),e.default=l}),define("dummy/components/auto-focus",["exports","ember-auto-focus/components/auto-focus"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/click-outside",["exports","ember-click-outside/components/click-outside"],function(e,t){e.default=t.default}),define("dummy/components/emoji-picker-toggler",["exports","ember-emojione/components/emoji-picker-toggler"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker-wrapper",["exports","ember-emojione/components/emoji-picker-wrapper"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker",["exports","ember-emojione/components/emoji-picker"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/category",["exports","ember-emojione/components/emoji-picker/category"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/label",["exports","ember-emojione/components/emoji-picker/label"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/tone",["exports","ember-emojione/components/emoji-picker/tone"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-typing-assistance",["exports","ember-emojione/components/emoji-typing-assistance"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/scroll-to",["exports","ember-scroll-to-mk2/components/scroll-to"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/controllers/application",["exports","ember-controller","ember-computed","ember-string"],function(e,t,n,r){e.default=t.default.extend({inputStr:"OMG! :scream:",inputStrHtmlSafe:(0,n.default)("inputStr",function(){var e=this.get("inputStr");return(0,r.htmlSafe)(e)})})}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment"],function(e,t,n){function r(){return o}e.appVersion=r;var o=n.default.APP.version;e.default=t.default.Helper.helper(r)}),define("dummy/helpers/eeo-and",["exports","ember-emojione/-private/helpers/eeo-and"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoAnd",{enumerable:!0,get:function(){return t.eeoAnd}})}),define("dummy/helpers/eeo-eq",["exports","ember-emojione/-private/helpers/eeo-eq"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoEq",{enumerable:!0,get:function(){return t.eeoEq}})}),define("dummy/helpers/eeo-exists",["exports","ember-emojione/-private/helpers/eeo-exists"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoExists",{enumerable:!0,get:function(){return t.eeoExists}})}),define("dummy/helpers/eeo-html-safe",["exports","ember-emojione/-private/helpers/eeo-html-safe"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoHtmlSafe",{enumerable:!0,get:function(){return t.eeoHtmlSafe}})}),define("dummy/helpers/inject-emoji",["exports","ember-emojione/helpers/inject-emoji"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"injectEmoji",{enumerable:!0,get:function(){return t.injectEmoji}})}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){var r=n.default.APP,o=r.name,i=r.version;e.default={name:"App Version",initialize:(0,t.default)(o,i)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/ember-keyboard-first-responder-inputs",["exports","ember-keyboard/initializers/ember-keyboard-first-responder-inputs"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function r(){var e=arguments[1]||arguments[0];if(n.default.exportApplicationGlobal!==!1){var r;if("undefined"!=typeof window)r=window;else if("undefined"!=typeof global)r=global;else{if("undefined"==typeof self)return;r=self}var o,i=n.default.exportApplicationGlobal;o="string"==typeof i?i:t.default.String.classify(n.default.modulePrefix),r[o]||(r[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete r[o]}}))}}e.initialize=r,e.default={name:"export-application-global",initialize:r}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember-router","dummy/config/environment"],function(e,t,n){var r=t.default.extend({location:n.default.locationType,rootURL:n.default.rootURL});r.map(function(){}),e.default=r}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/emoji",["exports","ember-emojione/services/emoji"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/keyboard",["exports","ember-keyboard/services/keyboard"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"ZsRh3Dl0",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","ember-emojione demo"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","\\n  "],["open-element","a",[]],["static-attr","href","https://github.com/Deveo/ember-emojione"],["flush-element"],["text","Source on GitHub"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Output"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\n  "],["append",["helper",["inject-emoji"],[["get",["inputStrHtmlSafe"]]],null],true],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Input"],["close-element"],["text","\\n"],["block",["emoji-picker-wrapper"],null,[["text","inputSelector","emojiInsertedAction"],[["get",["inputStr"]],"textarea",["helper",["action"],[["get",[null]],["helper",["mut"],[["get",["inputStr"]]],null]],null]]],0],["text","\\n"],["open-element","h2",[]],["flush-element"],["text","Source"],["close-element"],["text","\\n\\n"],["open-element","pre",[]],["flush-element"],["text","inputStr: \'OMG! :scream:\',\\n\\ninputStrHtmlSafe: computed(\'inputStr\', function () {\\n  const inputStr = this.get(\'inputStr\');\\n  return htmlSafe(inputStr);\\n}),\\n\\n"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n\\n{{#emoji-picker-wrapper\\n  text                = inputStr\\n  inputSelector       = \\"textarea\\"\\n  emojiInsertedAction = (action (mut inputStr))\\n  as |emojiPicker emojiPickerToggler emojiAssist|\\n}}\\n  <span style=\\"position: relative; display: inline-block;\\" class=\\"input-wrapper\\">\\n    {{textarea value=inputStr}}\\n    {{component emojiAssist}}\\n  </span>\\n\\n\\n  <span class=\\"togglePickerWrapper\\">\\n    {{component emojiPickerToggler}}\\n\\n    {{component emojiPicker}}\\n  </span>\\n{{/emoji-picker-wrapper}}"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","span",[]],["static-attr","style","position: relative; display: inline-block;"],["static-attr","class","input-wrapper"],["flush-element"],["text","\\n    "],["append",["helper",["textarea"],null,[["value"],[["get",["inputStr"]]]]],false],["text","\\n    "],["append",["helper",["component"],[["get",["emojiAssist"]]],null],false],["text","\\n  "],["close-element"],["text","\\n\\n\\n  "],["open-element","span",[]],["static-attr","class","togglePickerWrapper"],["flush-element"],["text","\\n    "],["append",["helper",["component"],[["get",["emojiPickerToggler"]]],null],false],["text","\\n\\n    "],["append",["helper",["component"],[["get",["emojiPicker"]]],null],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["emojiPicker","emojiPickerToggler","emojiAssist"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/utils/get-cmd-key",["exports","ember-keyboard/utils/get-cmd-key"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/utils/listener-name",["exports","ember-keyboard/utils/listener-name"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",r=document.querySelector('meta[name="'+n+'"]').getAttribute("content"),o=JSON.parse(unescape(r)),i={default:o};return Object.defineProperty(i,"__esModule",{value:!0}),i}catch(e){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests||require("dummy/app").default.create({name:"ember-emojione",version:"1.0.0-alpha.0+38e9135d"});